!=======================================================================
! Generated by: PSCAD v5.0.2.0
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : Gen1
! Description   : 
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE Gen1Dyn()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    EMTDC_X2COMP  ! 'Comparator with Interpolation'

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices
      INTEGER  N(3)

! Control Signals
      INTEGER  IT_1, ENAB, S2M, InitGv1, InitEx1
      REAL     RT_1, Tm01, RT_2, If1, RT_3, RT_4
      REAL     W1, Ef1, Tm1, Pang1, Qout1, Pout1
      REAL     Vterm(3), RT_5

! Internal Variables
      INTEGER  IVD1_1, IVD1_2, IVD1_3
      REAL     RVD2_1(2), RVD1_1, RVD1_2, RVD1_3
      REAL     RVD1_4, RVD1_5, RVD1_6, RVD1_7
      REAL     RVD1_8, RVD1_9, RVD1_10, RVD1_11
      REAL     RVD1_12, RVD1_13, RVD1_14, RVD1_15
      REAL     RVD1_16, RVD1_17, RVD1_18

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOI, ISTOF, IT_0                  ! Storage Indices
      INTEGER IPGB, ITXRX                         ! Control/Monitoring
      INTEGER ISUBS, SS(1), IBRCH(1), INODE       ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOI     = NSTOI
      NSTOI     = NSTOI + 5
      ISTOF     = NSTOF
      NSTOF     = NSTOF + 16
      IPGB      = NPGB
      NPGB      = NPGB + 9
      ITXRX     = NTXRX
      NTXRX     = NTXRX + 1
      INODE     = NNODE + 2
      NNODE     = NNODE + 5
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 1

      DO IT_0 = 1,1
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 6

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      RT_1     = STOF(ISTOF + 1)
      Tm01     = STOF(ISTOF + 2)
      RT_2     = STOF(ISTOF + 3)
      If1      = STOF(ISTOF + 4)
      IT_1     = STOI(ISTOI + 1)
      RT_3     = STOF(ISTOF + 5)
      RT_4     = STOF(ISTOF + 6)
      W1       = STOF(ISTOF + 7)
      Ef1      = STOF(ISTOF + 8)
      Tm1      = STOF(ISTOF + 9)
      Pang1    = STOF(ISTOF + 10)
      Qout1    = STOF(ISTOF + 11)
      Pout1    = STOF(ISTOF + 12)
      ENAB     = STOI(ISTOI + 2)
      RT_5     = STOF(ISTOF + 16)
      S2M      = STOI(ISTOI + 3)
      InitGv1  = STOI(ISTOI + 4)
      InitEx1  = STOI(ISTOI + 5)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         Vterm(IT_0) = STOF(ISTOF + 12 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         N(IT_0) = NODE(INODE + 0 + IT_0)
      END DO

!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Gen1.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 10:[radiolink] Wireless connection 'ENAB'
      ENAB = NINT(TX(TXRX(ITXRX+1)))

! 20:[time-sig] Output of Simulation Time 
      RT_5 = TIME

! 30:[compare] Single Input Level Comparator 
!
!
      CALL EMTDC_X2COMP(0,0,1.0,RT_5,0.0,0.0,1.0,RVD2_1)
      S2M = NINT(RVD2_1(1))

! 40:[const] Real Constant 
      RT_1 = 1.01

! 70:[const] Real Constant 
      RT_2 = 1.0

! 80:[hydro_gov] Hydro Governor/Turbine 
      CALL E_18HGOV1_EXE(RT_2, W1, Tm01, Tm1, 0.02, ENAB)
!

! 90:[sync_machine] Synchronous Machine 'HG1'
      CALL COMPONENT_ID(ICALL_NO,1466206109)
! RVD1_1 - Speed
! RVD1_2 - Neutral Voltage
! RVD1_3 - Neutral Current
! RVD1_4 - Load Angle
! RVD1_5 - Rotor Mechanical Angle
! RVD1_6 - Real Power output
! RVD1_7 - Reactive Power output
! RVD1_8 - Mechanical Torque
! RVD1_9 - Electrical Torque
! RVD1_10:15 - Monitored STOR locations
! RVD1_16:17 - Terminal Voltage RMS,pu
! RVD1_18 - Inverse of Base MVA
! IVD1_2 - Machine is active, Initialize exciter
! IVD1_3 - Torque driven, Initialize governor/turbine
      STORI(NSTORI) = NINT(STOR(NEXC+294))
      IVD1_1 = NRTCF
      RVD1_1 = RTCF(IVD1_1+2)
      CALL SYNCMC3P2_EXE(SS(1),  (IBRCH(1)+1), (IBRCH(1)+2), (IBRCH(1)+3&
     &), (IBRCH(1)+4), (IBRCH(1)+5), (IBRCH(1)+6),0.0,0,S2M,1.0,0,ENAB,R&
     &VD1_1,Tm1,0,0,1.0,0.0,376.991118,Ef1,0,1.0,0,If1,RVD1_2,RVD1_3,RVD&
     &1_4,RVD1_5,W1,RT_3,RVD1_6,RVD1_7,RVD1_8,RVD1_9,IVD1_2,IVD1_3,RVD1_&
     &10,RVD1_11,RVD1_12,RVD1_13,RVD1_14,RVD1_15)
      RT_4 = Tm1
      IF (IVD1_3 .EQ. 0) RT_4 = RVD1_8
      Tm01 = RVD1_8
      IF ((IVD1_2 .EQ. 1) .AND. (STORI(NSTORI).EQ.0)) THEN
          IF (STOR(NEXC-375+293).GT.0.5) THEN
              STORF(NSTORF) = STOR(NEXC-375+161)
          ELSE
              STORF(NSTORF) = STOR(NEXC-375+296)
          ENDIF
      ENDIF
      IF (IVD1_2 .EQ. 1) THEN
        STORF(NSTORF+1) = STORF(NSTORF+1) + (W1-RTCF(IVD1_1+2))*DELT
        IF (IVD1_3 .EQ. 0) STORF(NSTORF+2) = RVD1_4
        STORF(NSTORF+3) = STORF(NSTORF) + STORF(NSTORF+1) + STORF(NSTORF&
     &+2)
      ELSE
        STORF(NSTORF+3) = 0.0
      ENDIF
      Pout1 = RVD1_6/(3.0*RTCF(IVD1_1)*RTCF(IVD1_1+1))
      Qout1 = RVD1_7/(3.0*RTCF(IVD1_1)*RTCF(IVD1_1+1))
      Pang1 = RVD1_4
      InitGv1 = IVD1_3
      InitEx1 = IVD1_2
      NSTORF = NSTORF + 4
      NSTORI = NSTORI + 1

! 100:[exc_scrx] Solid State Exciter 
!  Solid State Exciter Model
      CALL SCRX1_EXE(SS(1),N(1),N(2),N(3),RT_1, 0.0, Ef1, If1, ENAB)
!

! 110:[pgb] Output Channel 'Tm1'

      PGB(IPGB+1) = Tm1

! 120:[pgb] Output Channel 'W1'

      PGB(IPGB+2) = W1

! 130:[pgb] Output Channel 'Qout1'

      PGB(IPGB+3) = 120.0 * Qout1

! 140:[pgb] Output Channel 'Pout1'

      PGB(IPGB+4) = 120.0 * Pout1

! 150:[pgb] Output Channel 'Pang1'

      PGB(IPGB+5) = 57.3 * Pang1

! 160:[pgb] Output Channel 'Ef1'

      PGB(IPGB+6) = Ef1

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 1) = RT_1
      STOF(ISTOF + 2) = Tm01
      STOF(ISTOF + 3) = RT_2
      STOF(ISTOF + 4) = If1
      STOI(ISTOI + 1) = IT_1
      STOF(ISTOF + 5) = RT_3
      STOF(ISTOF + 6) = RT_4
      STOF(ISTOF + 7) = W1
      STOF(ISTOF + 8) = Ef1
      STOF(ISTOF + 9) = Tm1
      STOF(ISTOF + 10) = Pang1
      STOF(ISTOF + 11) = Qout1
      STOF(ISTOF + 12) = Pout1
      STOI(ISTOI + 2) = ENAB
      STOF(ISTOF + 16) = RT_5
      STOI(ISTOI + 3) = S2M
      STOI(ISTOI + 4) = InitGv1
      STOI(ISTOI + 5) = InitEx1

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 12 + IT_0) = Vterm(IT_0)
      END DO


!---------------------------------------
! Transfer to Exports
!---------------------------------------

!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE Gen1Out()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

      REAL    EMTDC_VVDC    ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Electrical Node Indices
      INTEGER  N(3)

! Control Signals
      REAL     RT_1, RT_2, Vterm(3)

! Internal Variables
      INTEGER  IVD1_1

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC, IT_0    ! Storage Indices
      INTEGER IPGB, ITXRX                         ! Control/Monitoring
      INTEGER ISUBS, SS(1), IBRCH(1), INODE       ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      IPGB      = NPGB
      NPGB      = NPGB + 9
      ITXRX     = NTXRX
      NTXRX     = NTXRX + 1
      INODE     = NNODE + 2
      NNODE     = NNODE + 5
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 1

      DO IT_0 = 1,1
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 6

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      RT_1     = STOF(ISTOF + 1)
      RT_2     = STOF(ISTOF + 3)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         Vterm(IT_0) = STOF(ISTOF + 12 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         N(IT_0) = NODE(INODE + 0 + IT_0)
      END DO

!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Gen1.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 40:[const] Real Constant 

      RT_1 = 1.01

! 60:[voltmetergnd] Voltmeter (Line - Ground) 'Vterm'
      Vterm(1) = EMTDC_VVDC(SS(1), N(1), 0)
      Vterm(2) = EMTDC_VVDC(SS(1), N(2), 0)
      Vterm(3) = EMTDC_VVDC(SS(1), N(3), 0)

! 70:[const] Real Constant 

      RT_2 = 1.0

! 170:[pgb] Output Channel 'Vterm'

      DO IVD1_1 = 1, 3
         PGB(IPGB+7+IVD1_1-1) = Vterm(IVD1_1)
      ENDDO

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 1) = RT_1
      STOF(ISTOF + 3) = RT_2

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 12 + IT_0) = Vterm(IT_0)
      END DO


!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE Gen1Dyn_Begin()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------


!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals
      REAL     RT_1, RT_2

! Internal Variables
      INTEGER  IVD1_1
      REAL     RVD1_1, RVD1_2, RVD1_3, RVD1_4
      REAL     RVD1_5, RVD1_6, RVD10_1(10)
      REAL     RVD10_2(10)

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER ITXRX                               ! Control/Monitoring
      INTEGER ISUBS, SS(1), IBRCH(1), INODE       ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ITXRX     = NTXRX
      NTXRX     = NTXRX + 1
      INODE     = NNODE + 2
      NNODE     = NNODE + 5
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 1

      DO IT_0 = 1,1
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 6

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 10:[radiolink] Wireless connection 'ENAB'

! 20:[time-sig] Output of Simulation Time 

! 30:[compare] Single Input Level Comparator 

! 40:[const] Real Constant 
      RT_1 = 1.01

! 70:[const] Real Constant 
      RT_2 = 1.0

! 80:[hydro_gov] Hydro Governor/Turbine 
      CALL COMPONENT_ID(ICALL_NO,1963124365)
      CALL E_18HGOV1_CFG(60.0, 0.88, 3.7, 0.44, 0.02, 0.01, 0.01, 0.05, &
     &4.8, 0.1, 0.2, 0.22, 0.0, 0.01, 0.895)

! 90:[sync_machine] Synchronous Machine 'HG1'
      CALL COMPONENT_ID(ICALL_NO,1466206109)
      RVD10_1 = 0.0
      RVD10_2 = 0.0
      RVD10_1(2) = 1.0
      RVD10_2(2) = SQRT_2/(1.014-0.163*1.0)
      RVD10_1(3) = -1.0
      CALL SYNCMC3P0_CFG(0,0,1,376.991118,0.278, 0.163,1.0,1.014,0.28,0.&
     &314,1.0E-6, 0.77,0.375,0.228,RVD1_1,RVD1_2,RVD1_3)
      RVD1_4 = 55.0/(3.0*7.967*5.01)
      RVD1_5 = 0.0/(3.0*7.967*5.01)
      RVD1_6 = 5.01
      CALL SYNCMC3P2_CFG(1,1,1,1,1,1,1,1,1,RVD1_6,7.967,376.991118,10000&
     &0.0,0.0,3.117,0.04,300.0,RVD1_1,RVD1_2,1.014,0.28, 0.039,0.314,6.5&
     &5,1.0E6,1.0E6, 0.77,0.375,0.071, 1.0E6,1.0E6, RVD10_1,RVD10_2, 1.0&
     &,0.0,RVD1_4,RVD1_5,0.0, 0.1,100.0,0.2,1.0,0.0,20.0,10.0)

! 100:[exc_scrx] Solid State Exciter 
      CALL COMPONENT_ID(ICALL_NO,1440733647)
      CALL SCRX1_CFG(1,0,0.02,1.5,1.0,0.02,100.0,5.0,-5.0,7.967,15000.0)

! 110:[pgb] Output Channel 'Tm1'

! 120:[pgb] Output Channel 'W1'

! 130:[pgb] Output Channel 'Qout1'

! 140:[pgb] Output Channel 'Pout1'

! 150:[pgb] Output Channel 'Pang1'

! 160:[pgb] Output Channel 'Ef1'

      RETURN
      END

!=======================================================================

      SUBROUTINE Gen1Out_Begin()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------


!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices
      INTEGER  N(3)

! Control Signals
      REAL     RT_1, RT_2

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER ITXRX                               ! Control/Monitoring
      INTEGER ISUBS, SS(1), IBRCH(1), INODE       ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ITXRX     = NTXRX
      NTXRX     = NTXRX + 1
      INODE     = NNODE + 2
      NNODE     = NNODE + 5
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 1

      DO IT_0 = 1,1
         SS(IT_0) = SUBS(ISUBS + IT_0)
      END DO

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 6

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         N(IT_0) = NODE(INODE + 0 + IT_0)
      END DO

!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 40:[const] Real Constant 
      RT_1 = 1.01

! 70:[const] Real Constant 
      RT_2 = 1.0

! 170:[pgb] Output Channel 'Vterm'

      RETURN
      END

