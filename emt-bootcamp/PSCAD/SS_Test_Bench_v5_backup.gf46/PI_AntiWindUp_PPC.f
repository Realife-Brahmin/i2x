!=======================================================================
! Generated by: PSCAD v5.0.2.0
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : PI_AntiWindUp_PPC
! Description   : 
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE PI_AntiWindUp_PPCDyn(In, Out, frz, Rst, Kp, Ti, Kaw,   &
     &   MaxOut, MinOut)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

      REAL    EMTDC_XINT    ! 'Integrator /w Interpolation'
      REAL    LIMIT         ! Hard Limiter
!     SUBR    SANDH2        ! Sample and Hold

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      INTEGER, INTENT(IN)  :: frz, Rst
      REAL,    INTENT(IN)  :: In, Kp, Ti, Kaw
      REAL,    INTENT(IN)  :: MaxOut, MinOut
      REAL,    INTENT(OUT) :: Out

! Electrical Node Indices

! Control Signals
      INTEGER  IT_1, IT_2
      REAL     RT_1, RT_2, RT_3, RT_4, RT_5, RT_6
      REAL     RT_7, RT_8, RT_9, RT_10, RT_11
      REAL     RT_12, old_ref, RT_13

! Internal Variables
      REAL     RVD1_1, RVD2_1(2), RVD2_2(2)

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOI, ISTOF, IT_0                  ! Storage Indices
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOI     = NSTOI
      NSTOI     = NSTOI + 4
      ISTOF     = NSTOF
      NSTOF     = NSTOF + 21
      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      Out      = STOF(ISTOF + 2)
      RT_1     = STOF(ISTOF + 8)
      RT_2     = STOF(ISTOF + 9)
      RT_3     = STOF(ISTOF + 10)
      RT_4     = STOF(ISTOF + 11)
      RT_5     = STOF(ISTOF + 12)
      IT_1     = STOI(ISTOI + 3)
      RT_6     = STOF(ISTOF + 13)
      IT_2     = STOI(ISTOI + 4)
      RT_7     = STOF(ISTOF + 14)
      RT_8     = STOF(ISTOF + 15)
      RT_9     = STOF(ISTOF + 16)
      RT_10    = STOF(ISTOF + 17)
      RT_11    = STOF(ISTOF + 18)
      RT_12    = STOF(ISTOF + 19)
      old_ref  = STOF(ISTOF + 20)
      RT_13    = STOF(ISTOF + 21)


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'PI_AntiWindUp_PPC.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 70:[const] Real Constant 
      RT_13 = 0.0

! 90:[const] Real Constant 
      RT_11 = 0.0

! 110:[gain] Gain Block 
!  Gain
      RT_9 = Kaw * RT_8

! 120:[inv] Interpolated Logic Inverter 
      IF (Rst .NE. 0) THEN
         IT_2 = 0
      ELSE
         IT_2 = 1
      ENDIF

! 130:[mult] Multiplier 
      RT_6 = In * REAL(IT_2)

! 140:[select] Two Input Selector 
      IF (frz .EQ. RTCI(NRTCI)) THEN
         RT_4 = RT_13
      ELSE
         RT_4 = RT_6
      ENDIF
      NRTCI = NRTCI + 1
!

! 150:[gain] Gain Block 
!  Gain
      RT_3 = Kp * RT_4

! 160:[sumjct] Summing/Differencing Junctions 
      RT_10 = + RT_9 + In

! 170:[select] Two Input Selector 
      IF (frz .EQ. RTCI(NRTCI)) THEN
         RT_5 = RT_11
      ELSE
         RT_5 = RT_10
      ENDIF
      NRTCI = NRTCI + 1
!

! 180:[logic_mult] Multiple Input Logic Gate 
!
! Multi input OR gate
!
      IF ( (frz .NE. 0) .OR. (Rst .NE. 0) ) THEN
        IT_1 = 1
      ELSE
        IT_1 = 0
      ENDIF

! 190:[integral] Interpolated Integrator 
      RVD1_1 = RTCF(NRTCF) ! Initial Output
      NRTCF = NRTCF + 1
      RVD2_1(1) = RT_5
      RVD2_1(2) = 0.0
      RVD2_2(1) = FLOAT(IT_1)
      RVD2_2(2) = 0.0
      RT_2 = EMTDC_XINT(0, 0, 1, RVD1_1, Ti, old_ref, MinOut, MaxOut, RV&
     &D2_2, RVD2_1)

! 200:[sumjct] Summing/Differencing Junctions 
      RT_1 = + RT_2 + RT_3

! 210:[hardlimit] Hard Limiter 
!  Hard_Limit
      IF (MinOut .LE. MaxOut) THEN
        Out = LIMIT(MinOut, MaxOut, RT_1)
      ELSE
        Out = RT_1
        IF (STORL(NSTORL) .EQV. .FALSE.) THEN
          CALL EMTDC_WARN(ICALL_NO,821613476,1,"Lower limit is more than&
     & the upper limit, limits not enforced.")
          STORL(NSTORL) = .TRUE.
        ENDIF
      ENDIF
      NSTORL = NSTORL + 1
!

! 220:[tdelay] Delay Function 
      CALL DELAY2_EXE(Out,RT_12)

! 230:[sandhdefn] Sample and Hold 
!  Sample and Hold
      CALL SANDH2(RT_12,frz,  1,  old_ref)

! 240:[sumjct] Summing/Differencing Junctions 
      RT_7 = - RT_1 + Out

! 260:[zminusone] Feedback Loop Selector 'Feedback Loop XYZ'
! Feedback Loop XYZ
      RT_8 = RT_7

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 1) = In
      STOF(ISTOF + 2) = Out
      STOI(ISTOI + 1) = frz
      STOI(ISTOI + 2) = Rst
      STOF(ISTOF + 3) = Kp
      STOF(ISTOF + 4) = Ti
      STOF(ISTOF + 5) = Kaw
      STOF(ISTOF + 6) = MaxOut
      STOF(ISTOF + 7) = MinOut
      STOF(ISTOF + 8) = RT_1
      STOF(ISTOF + 9) = RT_2
      STOF(ISTOF + 10) = RT_3
      STOF(ISTOF + 11) = RT_4
      STOF(ISTOF + 12) = RT_5
      STOI(ISTOI + 3) = IT_1
      STOF(ISTOF + 13) = RT_6
      STOI(ISTOI + 4) = IT_2
      STOF(ISTOF + 14) = RT_7
      STOF(ISTOF + 15) = RT_8
      STOF(ISTOF + 16) = RT_9
      STOF(ISTOF + 17) = RT_10
      STOF(ISTOF + 18) = RT_11
      STOF(ISTOF + 19) = RT_12
      STOF(ISTOF + 20) = old_ref
      STOF(ISTOF + 21) = RT_13


!---------------------------------------
! Transfer to Exports
!---------------------------------------
      !Out      is output

!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE PI_AntiWindUp_PPCOut()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------


!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Electrical Node Indices

! Control Signals
      REAL     RT_11, RT_13

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC          ! Storage Indices
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      RT_11    = STOF(ISTOF + 18)
      RT_13    = STOF(ISTOF + 21)


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'PI_AntiWindUp_PPC.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 70:[const] Real Constant 

      RT_13 = 0.0

! 90:[const] Real Constant 

      RT_11 = 0.0

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 18) = RT_11
      STOF(ISTOF + 21) = RT_13


!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE PI_AntiWindUp_PPCDyn_Begin()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------


!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals
      REAL     RT_11, RT_13

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 70:[const] Real Constant 
      RT_13 = 0.0

! 90:[const] Real Constant 
      RT_11 = 0.0

! 110:[gain] Gain Block 

! 120:[inv] Interpolated Logic Inverter 

! 130:[mult] Multiplier 

! 140:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 150:[gain] Gain Block 

! 160:[sumjct] Summing/Differencing Junctions 

! 170:[select] Two Input Selector 
      RTCI(NRTCI) = 1
      NRTCI = NRTCI + 1

! 190:[integral] Interpolated Integrator 
      RTCF(NRTCF) = 0.0
      NRTCF = NRTCF + 1

! 200:[sumjct] Summing/Differencing Junctions 

! 210:[hardlimit] Hard Limiter 

! 220:[tdelay] Delay Function 
      CALL DELAY2_CFG(0,100,0,0.05,0.0)

! 230:[sandhdefn] Sample and Hold 

! 240:[sumjct] Summing/Differencing Junctions 

! 260:[zminusone] Feedback Loop Selector 'Feedback Loop XYZ'

      RETURN
      END

!=======================================================================

      SUBROUTINE PI_AntiWindUp_PPCOut_Begin()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------


!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals
      REAL     RT_11, RT_13

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISUBS                               ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      NNODE     = NNODE + 2
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 70:[const] Real Constant 
      RT_13 = 0.0

! 90:[const] Real Constant 
      RT_11 = 0.0

      RETURN
      END

