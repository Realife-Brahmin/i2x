function resp = test_resp
  [PQ, PV, REF, NONE, BUS_I, BUS_TYPE, PD, QD, GS, BS, BUS_AREA, VM, ...
    VA, BASE_KV, ZONE, VMAX, VMIN, LAM_P, LAM_Q, MU_VMAX, MU_VMIN] = idx_bus;
  [F_BUS, T_BUS, BR_R, BR_X, BR_B, RATE_A, RATE_B, RATE_C, TAP, SHIFT, ...
    BR_STATUS, ANGMIN, ANGMAX, PF, QF, PT, QT, MU_SF, MU_ST, MU_ANGMIN, ...
    MU_ANGMAX] = idx_brch;
  [CT_LABEL, CT_PROB, CT_TABLE, CT_TBUS, CT_TGEN, CT_TBRCH, CT_TAREABUS, ...
    CT_TAREAGEN, CT_TAREABRCH, CT_ROW, CT_COL, CT_CHGTYPE, CT_REP, ...
    CT_REL, CT_ADD, CT_NEWVAL, CT_TLOAD, CT_TAREALOAD, CT_LOAD_ALL_PQ, ...
    CT_LOAD_FIX_PQ, CT_LOAD_DIS_PQ, CT_LOAD_ALL_P, CT_LOAD_FIX_P, ...
    CT_LOAD_DIS_P, CT_TGENCOST, CT_TAREAGENCOST, CT_MODCOST_F, ...
    CT_MODCOST_X] = idx_ct;
  [GEN_BUS, PG, QG, QMAX, QMIN, VG, MBASE, GEN_STATUS, PMAX, PMIN, ...
    MU_PMAX, MU_PMIN, MU_QMAX, MU_QMIN, PC1, PC2, QC1MIN, QC1MAX, ...
    QC2MIN, QC2MAX, RAMP_AGC, RAMP_10, RAMP_30, RAMP_Q, APF] = idx_gen;
  [PW_LINEAR, POLYNOMIAL, MODEL, STARTUP, SHUTDOWN, NCOST, COST] = idx_cost;
  resp = struct( ...
    'type', 'mpcData', ...
    'table', CT_TLOAD, ...
    'rows', [1, 2, 3, 4, 5, 6, 7, 8], ...
    'col', CT_LOAD_DIS_P, ...
    'chgtype', CT_REP, ...
    'values', [] );
  scale = 1.000;
  resp.values(:, 1, 1) = scale * [2394.22; 2277.0; 2242.94; 2260.37; 2328.48; 2430.65; 2550.24; 2701.51; 2840.9; 2958.12; 3057.91; 3148.99; 3245.62; 3359.66; 3488.76; 3618.65; 3726.36; 3773.09; 3733.49; 3631.32; 3543.41; 3442.03; 3260.66; 2936.74];
  resp.values(:, 1, 2) = scale * [2575.56; 2280.03; 2212.36; 2201.31; 2239.98; 2324.22; 2431.94; 2564.52; 2713.66; 2839.34; 2945.67; 3038.2; 3127.97; 3228.78; 3348.92; 3478.74; 3600.27; 3684.51; 3692.79; 3620.98; 3520.17; 3437.31; 3310.26; 3085.15];
  resp.values(:, 1, 3) = scale * [54.08; 50.25; 49.13; 49.19; 50.38; 52.45; 54.91; 58.08; 61.29; 63.95; 66.24; 68.27; 70.31; 72.67; 75.44; 78.3; 80.87; 82.37; 82.06; 80.08; 77.99; 76.01; 72.69; 66.95];
  resp.values(:, 1, 4) = scale * [699.28; 571.89; 544.93; 537.52; 541.9; 558.75; 583.35; 612.33; 648.72; 681.75; 709.72; 733.65; 755.22; 778.47; 806.1; 837.11; 868.11; 893.39; 904.17; 893.72; 869.46; 848.23; 823.63; 779.14];
  resp.values(:, 1, 5) = scale * [1307.51; 1164.19; 1130.31; 1125.36; 1145.84; 1189.61; 1243.97; 1312.45; 1388.0; 1452.24; 1506.6; 1553.91; 1600.5; 1652.04; 1713.46; 1779.12; 1841.25; 1883.61; 1887.84; 1849.72; 1798.89; 1755.82; 1690.16; 1574.38];
  resp.values(:, 1, 6) = scale * [77.34; 66.0; 63.71; 63.22; 64.15; 66.41; 69.46; 73.11; 77.4; 81.11; 84.27; 86.97; 89.55; 92.39; 95.76; 99.44; 103.01; 105.65; 106.26; 104.46; 101.53; 99.15; 95.79; 89.76];
  resp.values(:, 1, 7) = scale * [883.39; 845.21; 834.62; 843.32; 870.16; 909.09; 954.83; 1011.53; 1062.56; 1105.27; 1141.94; 1175.96; 1212.25; 1255.34; 1303.72; 1351.73; 1390.28; 1404.27; 1386.5; 1347.95; 1315.82; 1275.75; 1204.31; 1071.25];
  resp.values(:, 1, 8) = scale * [18.85; 17.32; 16.88; 16.86; 17.23; 17.91; 18.75; 19.8; 20.92; 21.86; 22.66; 23.35; 24.05; 24.84; 25.78; 26.76; 27.67; 28.24; 28.2; 27.57; 26.83; 26.18; 25.11; 23.25];

  # per answer to https://github.com/MATPOWER/matpower/issues/106
  #   apply scaling to the total of responsive plus unresponsive load
  unresp = test_unresp;
  resp.values = resp.values + unresp.values;
end
